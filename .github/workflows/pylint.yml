name: Pylint

on:
  pull_request:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Get changed Python files
      id: changed-files
      run: |
        git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
        git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '\.py$' > changed_files.txt || true
        cat changed_files.txt

    - name: Run pylint on changed files
      id: pylint
      run: |
        if [ -s changed_files.txt ]; then
          python -m pylint $(cat changed_files.txt) --score=y > pylint-report.txt || true
          cat pylint-report.txt
          SCORE=$(grep "Your code has been rated at" pylint-report.txt | tail -1 || echo "No score")
          echo "score=$SCORE" >> $GITHUB_OUTPUT
        else
          echo "No Python files changed." | tee pylint-report.txt
          echo "score=No Python files changed." >> $GITHUB_OUTPUT
        fi

    - name: Add summary to PR
      run: |
        {
          echo "## 🐍 Pylint report (Python ${{ matrix.python-version }})"
          echo ""
          echo "### Code score"
          echo "${{ steps.pylint.outputs.score }}"
          echo ""
          echo "### Full report"
          echo "\`\`\`"
          cat pylint-report.txt
          echo "\`\`\`"
        } >> $GITHUB_STEP_SUMMARY
